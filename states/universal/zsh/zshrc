# packages
source ~/.zplug/init.zsh
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting"

zplug "clvv/fasd", as:command, use:fasd
zplug "junegunn/fzf-bin", \
    from:gh-r, \
    as:command, \
    rename-to:fzf, \
    use:"*darwin*amd64*", \
    if:"[[ $OSTYPE == *darwin* ]]"
zplug "junegunn/fzf-bin", \
    from:gh-r, \
    as:command, \
    rename-to:fzf, \
    use:"*linux*amd64*", \
    if:"[[ $OSTYPE == *linux* ]]"

zplug "mafredri/zsh-async", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug "lib/history", from:oh-my-zsh
zplug "plugins/shrink-path",   from:oh-my-zsh
zplug load


# initialization
eval "$(fasd --init auto)"
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh


# settings
bindkey -e
if test -f ~/.credentials; then source $HOME/.credentials; fi
if command -v exa > /dev/null; then alias ls=exa; fi
if command -v nvim > /dev/null; then alias vi=nvim; fi
alias https="http --default-scheme=https"
alias la="ls -la"
alias ll="ls -l"
alias vim=vi
alias vimrc="nvim $HOME/.config/nvim/init.vim"
alias zshrc="nvim $HOME/.zshrc"
alias unrartv="unrar x *.rar && mv *.mkv /media/TV/$(basename $(pwd)).mkv &"
export DEFAULT_USER=$(whoami)
export EDITOR=nvim
export HOMEBREW_NO_AUTO_UPDATE=1
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin:$HOME/bin
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=23"

# lyft
alias clearhosts="sed -i.bak '/onebox/d' ~/.ssh/known_hosts"
alias admin-deploys="aws-okta exec zimride-admin-deploys --"
alias sudo-dev="aws-okta exec zimride-sudo-developer --"
alias k=kubectl
alias lk=lyftkube
alias lkks="lyftkube --env staging kubectl"
alias lkkp="lyftkube --env production kubectl"
alias deploys="kubectl --kubeconfig ~/.kube/deploys.kubeconfig"
alias deploysstaging="kubectl --kubeconfig ~/.kube/deploysstaging.kubeconfig"
alias omnicron-staging="kubectl --kubeconfig ~/.kube/omnicron-staging.kubeconfig"
alias omnicron-prod="kubectl --kubeconfig ~/.kube/omnicron-prod.kubeconfig"
alias cs0="kubectl --kubeconfig ~/.kube/core-staging-0.kubeconfig"
alias cs1="kubectl --kubeconfig ~/.kube/core-staging-1.kubeconfig"
alias cs2="kubectl --kubeconfig ~/.kube/core-staging-2.kubeconfig"
alias cs3="kubectl --kubeconfig ~/.kube/core-staging-3.kubeconfig"
alias cs4="kubectl --kubeconfig ~/.kube/core-staging-4.kubeconfig"
alias cp0="kubectl --kubeconfig ~/.kube/core-prod-0.kubeconfig"
alias cp1="kubectl --kubeconfig ~/.kube/core-prod-1.kubeconfig"
alias cp2="kubectl --kubeconfig ~/.kube/core-prod-2.kubeconfig"
alias cp3="kubectl --kubeconfig ~/.kube/core-prod-3.kubeconfig"
alias cp4="kubectl --kubeconfig ~/.kube/core-prod-4.kubeconfig"
alias infra="kubectl --kubeconfig ~/.kube/infra.kubeconfig"
alias infrastaging="kubectl --kubeconfig ~/.kube/infrastaging.kubeconfig"
alias devkubestaging="kubectl --kubeconfig ~/.kube/devkubestaging.kubeconfig"
alias devkube="kubectl --kubeconfig ~/.kube/devkube.kubeconfig"
export LYFTVENV_NO_PRE_COMMIT=1
export WORKSPACE=$GOPATH/src/github.com/lyft
alias sync=$WORKSPACE/hacktools/sync-to-onebox-v3.sh
eval "$(/lyft/brew/bin/aactivator init)"
source '/Users/dmetz/go/src/github.com/lyft/awsaccess/awsaccess2.sh' # awsaccess
source '/Users/dmetz/go/src/github.com/lyft/awsaccess/oktaawsaccess.sh' # oktaawsaccess
PATH=$PATH:/Users/dmetz/.lyftkube-bin
